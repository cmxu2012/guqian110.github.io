<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Qian's World</title><link href="http://guqian110.github.io/" rel="alternate"></link><link href="http://guqian110.github.io/feeds/ic.atom.xml" rel="self"></link><id>http://guqian110.github.io/</id><updated>2015-03-18T00:00:00+08:00</updated><entry><title>静态时序分析 STA 1 —— 基础知识</title><link href="http://guqian110.github.io/pages/2015/03/18/static_timing_analysis_1_baisc.html" rel="alternate"></link><updated>2015-03-18T00:00:00+08:00</updated><author><name>Qian Gu</name></author><id>tag:guqian110.github.io,2015-03-18:pages/2015/03/18/static_timing_analysis_1_baisc.html</id><summary type="html">&lt;p&gt;静态时序分析（Static Timing）是数字 IC 设计中不可避免的话题，也是一个菜鸟成长必须掌握的技术。本文先总结 STA 中常见的定义、名词等。&lt;/p&gt;
&lt;h2&gt;Clock&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;时钟是数字电路的动力系统，可以说数字电路中最重要的信号就是时钟信号了。一般时钟信号的时序特性分为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;偏移 Skew&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抖动 Jitter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;占空比时钟 Duty Cycle Distortion&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于低速设计，基本不用考虑这些特征，但是对于高速设计，由于时钟本身造成的问题越来越普遍，因此有必要关注高速设计中的时序特性。&lt;/p&gt;
&lt;h3&gt;Skew&lt;/h3&gt;
&lt;p&gt;时钟信号要提供给整个电路的时序单元，所以时钟信号线非常长，并构成分布式的RC网路。它的延时与时钟线的长度、时序单元的负载电容、个数有关，由于时钟线长度及负载不同，会导致时钟信号到达相邻两个时序单元的时间不同，这个时间上的偏差就是 时钟偏移 &lt;code&gt;Skew&lt;/code&gt;。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="skew" src="/images/static-timing-analysis-1-baisc/skew.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;假设时钟信号达到两个 DFF 的延时分别为 Tc1 和 Tc2，用 Tskew 来表示它们之间的时钟偏移，则计算公式如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Tskew&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tc1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Tc2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;根据差值可以分为正偏移和负偏移：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;当时钟到达 DFF1 的延时更大时，也就是 C1 &amp;gt; C2 时，Tskew 为正&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当时钟到达 DFF2 的延时更大时，也就是 C1 &amp;lt; C2 时，Tskew 为负&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要注意到是，时钟偏移永远存在，当其大到一定程度时，就会严重影响电路的时序。&lt;/p&gt;
&lt;p&gt;FPGA 在设计架构时，专门针对这种现象进行优化，采用全铜工艺和树状结构，并且设计了专用的时钟缓冲和驱动网络，这么做的目的就是尽量使时钟到达不同时序单元的路径一样长，从而使时钟偏移非常小，可以忽略不计。&lt;/p&gt;
&lt;p&gt;所以，&lt;strong&gt;Skew 问题的解决方法就是：设计中的主要信号应该走全局时钟网络。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;即使采用了这样的设计，在实际电路中，时钟信号到达每个 DFF 的时间也不可能完全相等，Skew 是肯定存在的。所以 STA 仍然需要考虑该因素。在 PAR 之前，STA 只能根据设计的面积来粗略估计 Skew，在 PAR 之后，因为有了更具体的信息（线段长度、宽度、信号分布情况）STA 的估计值更加精确。&lt;/p&gt;
&lt;h3&gt;Jitter&lt;/h3&gt;
&lt;p&gt;理想的时钟信号是方波，但是实际中的时钟信号边沿不可能是瞬间变化的，是个斜坡，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="clock" src="/images/static-timing-analysis-1-baisc/clock.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;时钟抖动 &lt;code&gt;Jitter&lt;/code&gt; 的定义很多，最常见的有 3 种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;周期抖动 &lt;code&gt;Period Jitter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Period Jitter" src="/images/static-timing-analysis-1-baisc/period_jitter.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;实际时钟信号周期与理想时钟周期的差值的变化。这是最早最直接的一种衡量抖动的方式，这个指标说明了时钟信号每个周期的变化。&lt;/p&gt;
&lt;p&gt;因为这个差值是个随机变量，并且满足高斯分布，所以可以用期望和方差来描述。一般随机选择很多个周期，然后计算平均周期、标准差、峰峰值。标准差称为 “&lt;code&gt;RMS 抖动&lt;/code&gt;”，峰峰值称为 “&lt;code&gt;Pk-Pk 周期抖动&lt;/code&gt;”。知道 Pk-Pk 周期抖动，对于恰当配置系统和保持时间很有用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;周期差抖动 &lt;code&gt;Cycle-to-cycle Jitter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="c2c_jitter" src="/images/static-timing-analysis-1-baisc/cycle_to_cycle_jitter.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;两个相邻时钟周期的差值的变化。根据定义可知，对周期抖动做一阶差分，就可以得到周期差抖动。&lt;/p&gt;
&lt;p&gt;这个差值也是一个服从高斯分布的随机变量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相位抖动 &lt;code&gt;Phase Jitter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="phase_jitter" src="/images/static-timing-analysis-1-baisc/phase_jitter.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;一个时钟沿相对于基准对齐之后，经过一段时间后，与理想位置的偏差。这个指标说明了周期抖动在各个时期的累计效应。&lt;/p&gt;
&lt;p&gt;因为需要累积一段时间，所以这个误差又称为 时间间隔误差（TIE, Timer Interval Error）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于 周期抖动 和 周期差抖动 是单个周期或者相邻周期的偏差，所以表征为短期抖动行为。而相位抖动需要累积一段时间，所以表征为长期抖动行为。&lt;/p&gt;
&lt;p&gt;时钟抖动的原因就是噪声。&lt;strong&gt;时钟抖动是永远存在的&lt;/strong&gt;，当其大到可以和时钟周期相比拟的时候，会影响到设计，这样的抖动是不可接受的。&lt;/p&gt;
&lt;h3&gt;Duty Cycle Distortion&lt;/h3&gt;
&lt;p&gt;&lt;img alt="dcd" src="/images/static-timing-analysis-1-baisc/dcd.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;占空比失真，即时钟不对称，有脉冲的时间和无脉冲的时间发生了变化。DCD 会吞噬大量的时序裕量，造成数字信号的失真，使过零区间偏离理想的位置。DCD通常是由信号的上升沿和下降沿之间时序不同而造成的。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;Ohters&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;除去时钟信号，还有一些其他的相关定义。&lt;/p&gt;
&lt;h3&gt;Fan-out/Fan-out&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Fan-out&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在数字电路中，逻辑门相互连接，组成更加复杂的电路，所以大多数逻辑门的输出端都连接着多个别的单元的输入。所以需要一个术语来描述逻辑门的驱动能力的大小，也就是扇出 &lt;code&gt;Fan-out&lt;/code&gt;。最大扇出数 &lt;code&gt;maximum fan-out&lt;/code&gt; 定义为一个逻辑门可以驱动的同类逻辑门的最大数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大多数 TTL 逻辑门能够为 10 个其他数字门或驱动器提供信号。因而，一个典型的 TTL 逻辑门有 10 个扇出信号。&lt;/p&gt;
&lt;p&gt;在一些数字系统中，必须有一个单一的 TTL 逻辑门来驱动 10 个以上的其他门或驱动器。这种情况下，被称为缓冲器（buf）的驱动器可以用在 TTL 逻辑门与它必须驱动的多重驱动器之间。这种类型的缓冲器有 25 至 30 个扇出信号。逻辑反向器（非门）在大多数数字电路中能够辅助这一功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模块的扇出&lt;/strong&gt; 是指模块的直属下层模块的个数。一般认为，设计得好的系统平均扇出是 3 或 4。一个模块的扇出数过大或过小都不理想，过大比过小更严重。一般认为扇出的上限不超过 7。扇出过大意味着管理模块过于复杂，需要控制和协调过多的下级。解决的办法是适当增加中间层次。一个模块的扇入是指有多少个上级模块调用它。扇入越大，表示该模块被更多的上级模块共享。这当然是我们所希望的。但是不能为了获得高扇入而不惜代价，例如把彼此无关的功能凑在一起构成一个模块，虽然扇入数高了，但这样的模块内聚程度必然低。这是我们应避免的。&lt;/p&gt;
&lt;p&gt;设计得好的系统，上层模块有较高的扇出，下层模块有较高的扇入。其结构图像清真寺的塔，上面尖，中间宽，下面小。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Fan-in&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;与扇出相对的概念是 扇入 &lt;code&gt;Fan-in&lt;/code&gt;，它描述的是一个逻辑门能够处理的外部输入的能力。扇入大的逻辑门的速度要比扇入小的慢，原因是增加扇入相当于增加逻辑门的输入电容。我们可以用使用多级逻辑门来代替高扇入的设计。&lt;/p&gt;
&lt;h3&gt;Setup/Hold/Recovery/Removal Time&lt;/h3&gt;
&lt;p&gt;建立/保持时间是在同步设计中的概念：&lt;/p&gt;
&lt;p&gt;建立时间 &lt;code&gt;setup time&lt;/code&gt; ：触发器在时钟信号上升沿到来以前，要求输入数据必须保持稳定不变一段时间，这段时间就是器件需要的建立时间。如不满足 setup time，这个数据就不能被这一时钟打入触发器。&lt;/p&gt;
&lt;p&gt;保持时间 &lt;code&gt;hold time&lt;/code&gt; ：触发器在时钟信号上升沿到来以后，要求数据保持稳定不变一段时间，以便能够稳定读取，这段时间就是器件需要的保持时间。如果不满足 hold time，数据同样不能被打入触发器。&lt;/p&gt;
&lt;p&gt;恢复/撤销时间是在异步设计中的概念：&lt;/p&gt;
&lt;p&gt;恢复时间 &lt;code&gt;recovery time&lt;/code&gt; : 对于异步信号（比如异步复位/置位），信号变无效的边沿和下一个时钟沿之间必须满足一个最小的间隔。其意义在于，如果保证不了这个最小时间，也就是异步信号无效边离时钟边沿太近了，异步信号解除（无效）之后，没有给 DFF 足够的时间来恢复（recovery）到正常状态，那么就不能保证在时钟沿到来时 DFF 可以正常工作。&lt;/p&gt;
&lt;p&gt;撤销时间 &lt;code&gt;removal time&lt;/code&gt; : 对于异步信号（比如异步复位/置位），信号变有效的边沿和前一个时钟沿之间必须满足一个最小的间隔。其意义在于，如果保证不了这个最小时间，也就是异步信号的有效沿离时钟太近了，在时钟信号去除（无效）之前，异步信号提前有效了，可能会造成 DFF 处于不确定状态。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://guqian110.github.io/pages/2014/09/23/latch_versus_flip_flop.html"&gt;更加详细的总结：锁存器 Latch v.s. 触发器 Flip-Flop&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;Ref&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://book.douban.com/subject/11523088/"&gt;Xilinx FPGA 开发实用教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ictest8.com/debug/rf_pcb.htm"&gt;RF类IC demo 板loadboard设计参考资料之时钟部分&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ti.com.cn/cn/lit/an/zhca492/zhca492.pdf"&gt;正确理解时钟器件的抖动性能&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://m.ee.ofweek.com/2014-10/ART-11000-2813-28889698.html"&gt;技术解析：详解各种抖动技术规范&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.elecfans.com/article/85/126/2008/2008112718522.html"&gt;时间抖动(jitter)的概念及其分析方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://guqian110.github.io/pages/2014/09/23/latch_versus_flip_flop.html"&gt;锁存器 Latch v.s. 触发器 Flip-Flop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.csdn.net/shanghaiqianlun/article/details/8685047"&gt;TimeQuest定时分析的基本概念&lt;/a&gt;&lt;/p&gt;</summary><category term="STA"></category></entry></feed>